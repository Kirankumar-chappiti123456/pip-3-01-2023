own memcpy:

#include<stdio.h>
#include<string.h>
void memcpyfun(void *dest,void *src,int l)
{
    char *s=(char*)src;
    char *d=(char*)dest;
    for(int i=0;i<l;i++)
    {
        d[i]=s[i];
    }
    printf("the own memcpy:%s",d);
}
int main()
{
    char s[]="kirankumar";
    char d[20];
    int l=(strlen(s)+1);
    memcpyfun(d,s,l);
}



uisng string libr function:

#include<stdio.h>
#include<string.h>
int main()
{
    char s[]="kirankumar";
    char d[20];
    int l=(strlen(s)+1);
    memcpy(d,s,l);
    printf("using libr func:%s",d);
}


int array using the memcpy libr function:


#include<stdio.h>
#include<string.h>

int main()
{
    int s[]={1,2,3,4,5,6};
    int d[20];
    int l=sizeof(s);
    int k=sizeof(s)/sizeof(s[0]);
    memcpy(d,s,l); // here size of the array not length;
    for(int i=0;i<k;i++)
    {
    printf("%d ",d[i]);
    }
}



without using libr func:
#include<stdio.h>
#include<string.h>
int memcpyfun(void *dest,void *src,int l)
{
    int *s=(int*)src;
    int *d=(int*)dest;
    for(int i=0;i<l;i++)
    {
        d[i]=s[i];
    }
    for(int i=0;i<l;i++)
    {
        printf("%d",d[i]);
    }
}
int main()
{
    int s[]={1,2,3,4,5,6,7,8,9};
    int d[20];
    int l=sizeof(s)/sizeof(s[0]);
    memcpyfun(d,s,l);
}
